"use strict";(self.webpackChunkaide_family_github_io=self.webpackChunkaide_family_github_io||[]).push([[8130],{7735:n=>{n.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"/2024/11/18/promql-examples","metadata":{"permalink":"/blog/2024/11/18/promql-examples","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2024-11-18-promql-examples/index.md","source":"@site/blog/2024-11-18-promql-examples/index.md","title":"PromQL \u5e38\u7528\u67e5\u8be2\u8bed\u53e5\u793a\u4f8b","description":"\u6536\u96c6\u6574\u7406 Prometheus \u76d1\u63a7\u4e2d\u6700\u5e38\u7528\u7684 PromQL \u67e5\u8be2\u8bed\u53e5\u793a\u4f8b","date":"2024-11-18T00:00:00.000Z","tags":[{"inline":true,"label":"Prometheus","permalink":"/blog/tags/prometheus"},{"inline":true,"label":"PromQL","permalink":"/blog/tags/prom-ql"},{"inline":true,"label":"\u76d1\u63a7","permalink":"/blog/tags/\u76d1\u63a7"},{"inline":true,"label":"\u53ef\u89c2\u6d4b\u6027","permalink":"/blog/tags/\u53ef\u89c2\u6d4b\u6027"}],"readingTime":8.915,"hasTruncateMarker":false,"authors":[{"name":"\u68a7\u6850","title":"\u6c38\u8fdc\u5e74\u8f7b\uff0c\u6c38\u8fdc\u70ed\u7231","url":"https://github.com/aide-cloud","page":{"permalink":"/blog/authors/wutong"},"socials":{"github":"https://github.com/aide-cloud"},"imageURL":"https://avatars.githubusercontent.com/u/52439018?v=4","key":"wutong"}],"frontMatter":{"title":"PromQL \u5e38\u7528\u67e5\u8be2\u8bed\u53e5\u793a\u4f8b","date":"2024-11-18T00:00:00.000Z","authors":["wutong"],"description":"\u6536\u96c6\u6574\u7406 Prometheus \u76d1\u63a7\u4e2d\u6700\u5e38\u7528\u7684 PromQL \u67e5\u8be2\u8bed\u53e5\u793a\u4f8b","tags":["Prometheus","PromQL","\u76d1\u63a7","\u53ef\u89c2\u6d4b\u6027"]},"unlisted":false,"nextItem":{"title":"Prometheus \u6307\u6807\u7c7b\u578b\u8be6\u89e3","permalink":"/blog/2024/11/17/prometheus-metrics"}},"content":"\u672c\u6587\u6536\u96c6\u6574\u7406\u4e86\u5728 Prometheus \u76d1\u63a7\u4e2d\u6700\u5e38\u7528\u7684 PromQL \u67e5\u8be2\u8bed\u53e5\uff0c\u65b9\u4fbf\u65e5\u5e38\u67e5\u8be2\u548c\u544a\u8b66\u89c4\u5219\u7f16\u5199\u65f6\u53c2\u8003\u3002\\n\\n## \u7cfb\u7edf\u76d1\u63a7\\n\\n### CPU \u76f8\u5173\u67e5\u8be2\\n\\n```promql\\n# CPU \u4f7f\u7528\u7387\\n100 - (avg by(instance) (rate(node_cpu_seconds_total{mode=\\"idle\\"}[5m])) * 100)\\n\\n# CPU \u5404\u4e2a\u72b6\u6001\u5360\u6bd4\\nrate(node_cpu_seconds_total[5m]) * 100\\n\\n# \u6309\u6838\u5fc3\u7edf\u8ba1 CPU \u4f7f\u7528\u7387\\navg by (cpu) (rate(node_cpu_seconds_total{mode!=\\"idle\\"}[5m]) * 100)\\n\\n# CPU \u8d1f\u8f7d\\nnode_load1  # 1\u5206\u949f\u8d1f\u8f7d\\nnode_load5  # 5\u5206\u949f\u8d1f\u8f7d\\nnode_load15 # 15\u5206\u949f\u8d1f\u8f7d\\n```\\n\\n### \u5185\u5b58\u76f8\u5173\u67e5\u8be2\\n\\n```promql\\n# \u5185\u5b58\u4f7f\u7528\u7387\\n(1 - node_memory_MemAvailable_bytes/node_memory_MemTotal_bytes) * 100\\n\\n# \u53ef\u7528\u5185\u5b58\\nnode_memory_MemAvailable_bytes / 1024 / 1024 / 1024\\n\\n# \u5185\u5b58\u4f7f\u7528\u91cf\u524d\u4e94\u7684\u8fdb\u7a0b\\ntopk(5, sum by (name) (container_memory_usage_bytes{container!=\\"\\"}))\\n\\n# Swap \u4f7f\u7528\u7387\\n(1 - node_memory_SwapFree_bytes/node_memory_SwapTotal_bytes) * 100\\n```\\n\\n### \u78c1\u76d8\u76f8\u5173\u67e5\u8be2\\n\\n```promql\\n# \u78c1\u76d8\u4f7f\u7528\u7387\\n100 - ((node_filesystem_avail_bytes * 100) / node_filesystem_size_bytes)\\n\\n# \u78c1\u76d8\u8bfb\u5199\u901f\u7387\\nrate(node_disk_read_bytes_total[5m])\\nrate(node_disk_written_bytes_total[5m])\\n\\n# \u78c1\u76d8 IO \u4f7f\u7528\u7387\\nrate(node_disk_io_time_seconds_total[5m]) * 100\\n\\n# \u9884\u6d4b\u78c1\u76d8\u6ee1\u7684\u65f6\u95f4\uff08\u5c0f\u65f6\uff09\\npredict_linear(node_filesystem_free_bytes[1h], 4 * 3600) < 0\\n```\\n\\n### \u7f51\u7edc\u76f8\u5173\u67e5\u8be2\\n\\n```promql\\n# \u7f51\u7edc\u63a5\u53e3\u6d41\u91cf\\nrate(node_network_receive_bytes_total[5m])\\nrate(node_network_transmit_bytes_total[5m])\\n\\n# \u7f51\u7edc\u63a5\u53e3\u9519\u8bef\u7387\\nrate(node_network_receive_errs_total[5m])\\nrate(node_network_transmit_errs_total[5m])\\n\\n# TCP \u8fde\u63a5\u72b6\u6001\\nnode_netstat_Tcp_CurrEstab\\n```\\n\\n## \u5bb9\u5668\u76d1\u63a7\\n\\n### \u5bb9\u5668\u8d44\u6e90\u4f7f\u7528\\n\\n```promql\\n# \u5bb9\u5668 CPU \u4f7f\u7528\u7387\\nsum(rate(container_cpu_usage_seconds_total{container!=\\"\\"}[5m])) by (container) * 100\\n\\n# \u5bb9\u5668\u5185\u5b58\u4f7f\u7528\u91cf\uff08GB\uff09\\nsum(container_memory_usage_bytes{container!=\\"\\"}) by (container) / 1024^3\\n\\n# \u5bb9\u5668\u7f51\u7edc IO\\nsum(rate(container_network_receive_bytes_total[5m])) by (container)\\nsum(rate(container_network_transmit_bytes_total[5m])) by (container)\\n```\\n\\n## \u5e94\u7528\u76d1\u63a7\\n\\n### HTTP \u670d\u52a1\u76d1\u63a7\\n\\n```promql\\n# \u8bf7\u6c42\u901f\u7387\uff08QPS\uff09\\nsum(rate(http_requests_total[5m])) by (handler)\\n\\n# \u9519\u8bef\u7387\\nsum(rate(http_requests_total{status=~\\"5..\\"}[5m])) \\n  / \\nsum(rate(http_requests_total[5m])) * 100\\n\\n# \u5e73\u5747\u54cd\u5e94\u65f6\u95f4\\nrate(http_request_duration_seconds_sum[5m]) \\n  / \\nrate(http_request_duration_seconds_count[5m])\\n\\n# P90/P95/P99 \u5ef6\u8fdf\\nhistogram_quantile(0.90, sum(rate(http_request_duration_seconds_bucket[5m])) by (le))\\nhistogram_quantile(0.95, sum(rate(http_request_duration_seconds_bucket[5m])) by (le))\\nhistogram_quantile(0.99, sum(rate(http_request_duration_seconds_bucket[5m])) by (le))\\n```\\n\\n### JVM \u76d1\u63a7\\n\\n```promql\\n# \u5806\u5185\u5b58\u4f7f\u7528\u7387\\njvm_memory_bytes_used{area=\\"heap\\"} \\n  / \\njvm_memory_bytes_max{area=\\"heap\\"} * 100\\n\\n# GC \u6b21\u6570\\nrate(jvm_gc_collection_seconds_count[5m])\\n\\n# GC \u8017\u65f6\\nrate(jvm_gc_collection_seconds_sum[5m])\\n\\n# \u7ebf\u7a0b\u6570\\njvm_threads_current\\n```\\n\\n## \u544a\u8b66\u89c4\u5219\u793a\u4f8b\\n\\n### \u7cfb\u7edf\u544a\u8b66\\n\\n```promql\\n# CPU \u4f7f\u7528\u7387\u8fc7\u9ad8\\n100 - (avg by(instance) (rate(node_cpu_seconds_total{mode=\\"idle\\"}[5m])) * 100) > 80\\n\\n# \u5185\u5b58\u4f7f\u7528\u7387\u8fc7\u9ad8\\n(1 - node_memory_MemAvailable_bytes/node_memory_MemTotal_bytes) * 100 > 90\\n\\n# \u78c1\u76d8\u4f7f\u7528\u7387\u8fc7\u9ad8\\n100 - ((node_filesystem_avail_bytes * 100) / node_filesystem_size_bytes) > 85\\n\\n# \u78c1\u76d8\u5c06\u5728 4 \u5c0f\u65f6\u5185\u6ee1\\npredict_linear(node_filesystem_free_bytes[1h], 4 * 3600) < 0\\n```\\n\\n### \u5e94\u7528\u544a\u8b66\\n\\n```promql\\n# \u670d\u52a1\u5b9e\u4f8b\u4e0d\u53ef\u7528\\nup{job=\\"my-service\\"} == 0\\n\\n# \u9519\u8bef\u7387\u8fc7\u9ad8\\nsum(rate(http_requests_total{status=~\\"5..\\"}[5m])) \\n  / \\nsum(rate(http_requests_total[5m])) * 100 > 5\\n\\n# \u54cd\u5e94\u5ef6\u8fdf\u8fc7\u9ad8\\nhistogram_quantile(0.95, sum(rate(http_request_duration_seconds_bucket[5m])) by (le)) > 1\\n```\\n\\n## \u6027\u80fd\u4f18\u5316\u67e5\u8be2\\n\\n```promql\\n# \u67e5\u627e\u9ad8\u57fa\u6570\u7684\u6307\u6807\\ntopk(10, count by (__name__) ({__name__=~\\".+\\"}))\\n\\n# \u67e5\u627e\u6700\u6d3b\u8dc3\u7684 targets\\ntopk(10, count by (job) (up))\\n\\n# \u67e5\u627e\u91c7\u96c6\u901f\u7387\u6700\u9ad8\u7684\u6307\u6807\\ntopk(10, rate(prometheus_tsdb_head_samples_appended_total[5m]))\\n```\\n\\n## \u9ad8\u7ea7\u76d1\u63a7\u573a\u666f\\n\\n### Kubernetes \u96c6\u7fa4\u76d1\u63a7\\n\\n```promql\\n# \u8282\u70b9 Ready \u72b6\u6001\\nkube_node_status_condition{condition=\\"Ready\\",status=\\"true\\"}\\n\\n# Pod \u8fd0\u884c\u72b6\u6001\u7edf\u8ba1\\nsum by (namespace) (kube_pod_status_phase{phase=\\"Running\\"})\\n\\n# \u5bb9\u5668\u91cd\u542f\u6b21\u6570\\nsum by (namespace, pod) (kube_pod_container_status_restarts_total)\\n\\n# \u8282\u70b9\u8d44\u6e90\u538b\u529b\\nsum by (node) (\\n  kube_pod_container_resource_requests{resource=\\"cpu\\"} \\n) / sum by (node) (\\n  kube_node_status_allocatable{resource=\\"cpu\\"}\\n) * 100\\n\\n# \u547d\u540d\u7a7a\u95f4\u8d44\u6e90\u914d\u989d\u4f7f\u7528\u7387\\nsum by (namespace) (\\n  kube_resourcequota{type=\\"used\\"}\\n) / sum by (namespace) (\\n  kube_resourcequota{type=\\"hard\\"}\\n) * 100\\n```\\n\\n### \u6570\u636e\u5e93\u76d1\u63a7\\n\\n#### MySQL \u76d1\u63a7\\n```promql\\n# \u8fde\u63a5\u6570\u4f7f\u7528\u7387\\nmysql_global_status_threads_connected \\n  / \\nmysql_global_variables_max_connections * 100\\n\\n# \u6162\u67e5\u8be2\u7edf\u8ba1\\nrate(mysql_global_status_slow_queries[5m])\\n\\n# InnoDB \u7f13\u51b2\u6c60\u4f7f\u7528\u7387\\nmysql_global_status_innodb_buffer_pool_pages_total \\n  - \\nmysql_global_status_innodb_buffer_pool_pages_free\\n\\n# \u4e8b\u52a1\u7edf\u8ba1\\nrate(mysql_global_status_commands_total{command=\\"commit\\"}[5m])\\n```\\n\\n#### Redis \u76d1\u63a7\\n```promql\\n# \u5185\u5b58\u4f7f\u7528\u7387\\nredis_memory_used_bytes / redis_memory_max_bytes * 100\\n\\n# \u547d\u4ee4\u6267\u884c\u7387\\nrate(redis_commands_total[5m])\\n\\n# \u952e\u8fc7\u671f\u7387\\nrate(redis_expired_keys_total[5m])\\n\\n# \u8fde\u63a5\u6570\\nredis_connected_clients\\n```\\n\\n### \u6d88\u606f\u961f\u5217\u76d1\u63a7\\n\\n#### RabbitMQ \u76d1\u63a7\\n```promql\\n# \u961f\u5217\u6d88\u606f\u5806\u79ef\\nrabbitmq_queue_messages_ready\\n\\n# \u6d88\u8d39\u8005\u6570\u91cf\\nrabbitmq_queue_consumers\\n\\n# \u6d88\u606f\u5904\u7406\u7387\\nrate(rabbitmq_queue_messages_delivered_total[5m])\\n\\n# \u672a\u786e\u8ba4\u6d88\u606f\u6570\\nrabbitmq_queue_messages_unacknowledged\\n```\\n\\n#### Kafka \u76d1\u63a7\\n```promql\\n# \u4e3b\u9898\u6d88\u606f\u7387\\nrate(kafka_topic_partition_current_offset[5m])\\n\\n# \u6d88\u8d39\u7ec4\u5ef6\u8fdf\\nsum by (topic) (\\n  kafka_consumergroup_lag\\n)\\n\\n# Broker \u6d3b\u8dc3\u8fde\u63a5\u6570\\nkafka_server_socket_server_metrics_connection_count\\n\\n# \u526f\u672c\u540c\u6b65\u5ef6\u8fdf\\nkafka_replica_lag\\n```\\n\\n### \u7f51\u5173\u548c\u4ee3\u7406\u76d1\u63a7\\n\\n#### Nginx \u76d1\u63a7\\n```promql\\n# \u8bf7\u6c42\u5904\u7406\u7387\\nrate(nginx_http_requests_total[5m])\\n\\n# \u6d3b\u8dc3\u8fde\u63a5\u6570\\nnginx_connections_active\\n\\n# \u9519\u8bef\u7387\\nsum(rate(nginx_http_requests_total{status=~\\"5..\\"}[5m])) \\n  / \\nsum(rate(nginx_http_requests_total[5m])) * 100\\n\\n# \u4e0a\u6e38\u54cd\u5e94\u65f6\u95f4\\nhistogram_quantile(0.95, \\n  rate(nginx_upstream_response_time_seconds_bucket[5m])\\n)\\n```\\n\\n### \u5e94\u7528\u6027\u80fd\u76d1\u63a7\\n\\n#### \u670d\u52a1\u4f9d\u8d56\u76d1\u63a7\\n```promql\\n# \u670d\u52a1\u8c03\u7528\u9519\u8bef\u7387\\nsum by (service) (\\n  rate(service_calls_total{result=\\"error\\"}[5m])\\n) / sum by (service) (\\n  rate(service_calls_total[5m])\\n) * 100\\n\\n# \u670d\u52a1\u4f9d\u8d56\u53ef\u7528\u6027\\nsum by (dependency) (\\n  rate(dependency_up[5m])\\n)\\n\\n# \u5916\u90e8\u670d\u52a1\u8c03\u7528\u5ef6\u8fdf\\nhistogram_quantile(0.95,\\n  rate(external_service_response_time_bucket[5m])\\n)\\n```\\n\\n#### \u7f13\u5b58\u6027\u80fd\u76d1\u63a7\\n```promql\\n# \u7f13\u5b58\u547d\u4e2d\u7387\\nsum(rate(cache_hits_total[5m])) \\n  / \\nsum(rate(cache_requests_total[5m])) * 100\\n\\n# \u7f13\u5b58\u8fc7\u671f\u7387\\nrate(cache_evictions_total[5m])\\n\\n# \u7f13\u5b58\u5ef6\u8fdf\u5206\u5e03\\nhistogram_quantile(0.99,\\n  rate(cache_operation_duration_seconds_bucket[5m])\\n)\\n```\\n\\n### \u65e5\u5fd7\u76f8\u5173\u76d1\u63a7\\n\\n```promql\\n# \u9519\u8bef\u65e5\u5fd7\u7387\\nrate(log_messages_total{level=\\"error\\"}[5m])\\n\\n# \u6309\u7167\u670d\u52a1\u7edf\u8ba1\u9519\u8bef\u6570\\nsum by (service) (\\n  increase(log_errors_total[1h])\\n)\\n\\n# \u65e5\u5fd7\u5199\u5165\u5ef6\u8fdf\\nhistogram_quantile(0.95,\\n  rate(log_write_duration_seconds_bucket[5m])\\n)\\n```\\n\\n### \u5b89\u5168\u76d1\u63a7\\n\\n```promql\\n# \u8ba4\u8bc1\u5931\u8d25\u6b21\u6570\\nrate(auth_failures_total[5m])\\n\\n# IP \u5c01\u7981\u6b21\u6570\\nincrease(ip_blacklist_total[1h])\\n\\n# HTTPS \u8bc1\u4e66\u8fc7\u671f\u65f6\u95f4\uff08\u5929\uff09\\n(\\n  ssl_certificate_expiry_timestamp_seconds \\n  - \\n  time()\\n) / 86400\\n\\n# \u5f02\u5e38\u767b\u5f55\u5c1d\u8bd5\\nsum by (user) (\\n  rate(failed_login_attempts_total[5m])\\n)\\n```\\n\\n## \u9ad8\u7ea7\u544a\u8b66\u89c4\u5219\\n\\n### \u8d8b\u52bf\u9884\u6d4b\u544a\u8b66\\n```promql\\n# \u9884\u6d4b 4 \u5c0f\u65f6\u540e\u7684\u503c\u662f\u5426\u8d85\u8fc7\u9608\u503c\\npredict_linear(\\n  http_requests_total[1h], \\n  4 * 3600\\n) > 1000\\n\\n# \u5f02\u5e38\u503c\u68c0\u6d4b\\nabs(\\n  rate(http_requests_total[5m])\\n  - \\n  avg_over_time(rate(http_requests_total[5m])[1h:5m])\\n) > 2\\n```\\n\\n### \u590d\u5408\u544a\u8b66\u6761\u4ef6\\n```promql\\n# CPU \u548c\u5185\u5b58\u540c\u65f6\u9ad8\u8d1f\u8f7d\\n(\\n  instance:cpu_usage:rate5m > 80\\n  and\\n  instance:memory_usage:ratio > 80\\n)\\n\\n# \u670d\u52a1\u591a\u9879\u6307\u6807\u5f02\u5e38\\n(\\n  service:error_rate:5m > 1\\n  and\\n  service:latency:p95_5m > 0.5\\n  and\\n  service:success_rate:5m < 99\\n)\\n```\\n\\n## \u6700\u4f73\u5b9e\u8df5\u8865\u5145\\n\\n### \u67e5\u8be2\u4f18\u5316\u8fdb\u9636\\n1. **\u4f7f\u7528\u5b50\u67e5\u8be2\u4f18\u5316\u590d\u6742\u8ba1\u7b97**\\n```promql\\n# \u4f18\u5316\u524d\\nsum(rate(http_requests_total[5m])) / sum(rate(http_requests_total[5m]))\\n\\n# \u4f18\u5316\u540e\\nsum(rate(http_requests_total[5m])) \\n  / \\ngroup(sum(rate(http_requests_total[5m])))\\n```\\n\\n2. **\u4f7f\u7528 recording rules \u4f18\u5316\u5e38\u7528\u67e5\u8be2**\\n```promql\\n# \u8bb0\u5f55\u89c4\u5219\u793a\u4f8b\\nrules:\\n  - record: job:http_errors:rate5m\\n    expr: sum by (job) (rate(http_requests_total{status=~\\"5..\\"}[5m]))\\n```\\n\\n### \u5fae\u670d\u52a1\u76d1\u63a7\\n\\n#### \u670d\u52a1\u7f51\u683c\u76d1\u63a7\\n```promql\\n# \u670d\u52a1\u95f4\u8c03\u7528\u5ef6\u8fdf\\nhistogram_quantile(0.95,\\n  sum(rate(istio_request_duration_milliseconds_bucket[5m])) by (source_app, destination_app, le)\\n)\\n\\n# \u670d\u52a1\u9519\u8bef\u7387\\nsum(rate(istio_requests_total{response_code=~\\"5.*\\"}[5m])) by (destination_service) \\n  / \\nsum(rate(istio_requests_total[5m])) by (destination_service) * 100\\n\\n# \u670d\u52a1\u91cd\u8bd5\u7387\\nsum(rate(istio_requests_total{response_flags=\\"RR\\"}[5m])) by (destination_service)\\n  /\\nsum(rate(istio_requests_total[5m])) by (destination_service) * 100\\n\\n# \u65ad\u8def\u5668\u5f00\u542f\u6b21\u6570\\nincrease(istio_circuit_breaker_open_total[5m])\\n```\\n\\n#### \u94fe\u8def\u8ffd\u8e2a\u76f8\u5173\\n```promql\\n# \u8ffd\u8e2a\u91c7\u6837\u7387\\nsum(rate(spans_sampled_total[5m])) \\n  / \\nsum(rate(spans_total[5m])) * 100\\n\\n# \u8ffd\u8e2a\u5ef6\u8fdf\u5206\u5e03\\nhistogram_quantile(0.95, sum(rate(trace_duration_seconds_bucket[5m])) by (service, le))\\n\\n# \u8ffd\u8e2a\u9519\u8bef\u7387\\nsum(rate(spans_errors_total[5m])) by (service)\\n  /\\nsum(rate(spans_total[5m])) by (service) * 100\\n```\\n\\n### \u4e91\u539f\u751f\u7ec4\u4ef6\u76d1\u63a7\\n\\n#### Etcd \u76d1\u63a7\\n```promql\\n# Leader \u9009\u4e3e\u72b6\u6001\\netcd_server_is_leader\\n\\n# \u5199\u5165\u5ef6\u8fdf\\nhistogram_quantile(0.99, rate(etcd_disk_wal_fsync_duration_seconds_bucket[5m]))\\n\\n# \u6570\u636e\u5e93\u5927\u5c0f\\netcd_debugging_mvcc_db_total_size_in_bytes\\n\\n# Raft \u63d0\u6848\u5931\u8d25\u7387\\nrate(etcd_server_proposals_failed_total[5m])\\n  /\\nrate(etcd_server_proposals_committed_total[5m]) * 100\\n```\\n\\n#### CoreDNS \u76d1\u63a7\\n```promql\\n# DNS \u67e5\u8be2\u7387\\nsum(rate(coredns_dns_requests_total[5m])) by (zone)\\n\\n# \u67e5\u8be2\u5ef6\u8fdf\\nhistogram_quantile(0.95, sum(rate(coredns_dns_request_duration_seconds_bucket[5m])) by (zone, le))\\n\\n# \u9519\u8bef\u7387\\nsum(rate(coredns_dns_responses_total{rcode!=\\"NOERROR\\"}[5m])) \\n  / \\nsum(rate(coredns_dns_responses_total[5m])) * 100\\n```\\n\\n### \u5b58\u50a8\u7cfb\u7edf\u76d1\u63a7\\n\\n#### Elasticsearch \u76d1\u63a7\\n```promql\\n# \u96c6\u7fa4\u72b6\u6001\\nelasticsearch_cluster_health_status{color=\\"green\\"}\\n\\n# \u7d22\u5f15\u5199\u5165\u5ef6\u8fdf\\nrate(elasticsearch_index_stats_indexing_index_time_seconds_total[5m])\\n  /\\nrate(elasticsearch_index_stats_indexing_index_total[5m])\\n\\n# JVM \u5806\u4f7f\u7528\u7387\\nelasticsearch_jvm_memory_used_bytes{area=\\"heap\\"}\\n  /\\nelasticsearch_jvm_memory_max_bytes{area=\\"heap\\"} * 100\\n\\n# \u641c\u7d22\u5ef6\u8fdf\\nrate(elasticsearch_indices_search_fetch_time_seconds[5m])\\n  /\\nrate(elasticsearch_indices_search_fetch_total[5m])\\n```\\n\\n#### MongoDB \u76d1\u63a7\\n```promql\\n# \u8fde\u63a5\u6570\\nmongodb_connections{state=\\"current\\"}\\n\\n# \u64cd\u4f5c\u5ef6\u8fdf\\nrate(mongodb_op_latencies_latency_total[5m])\\n  /\\nrate(mongodb_op_latencies_ops_total[5m])\\n\\n# \u590d\u5236\u5ef6\u8fdf\\nmongodb_replset_member_optime_date{state=\\"SECONDARY\\"}\\n  -\\nmongodb_replset_member_optime_date{state=\\"PRIMARY\\"}\\n\\n# \u6162\u67e5\u8be2\u6570\\nrate(mongodb_mongod_metrics_query_executor_total{state=\\"scanned_objects\\"}[5m])\\n```\\n\\n### \u7f51\u7edc\u76d1\u63a7\u8fdb\u9636\\n\\n#### \u7f51\u7edc\u8d28\u91cf\u76d1\u63a7\\n```promql\\n# \u7f51\u7edc\u5ef6\u8fdf\\navg_over_time(ping_average_response_ms[5m])\\n\\n# \u4e22\u5305\u7387\\nrate(ping_loss_count[5m])\\n  /\\nrate(ping_count[5m]) * 100\\n\\n# \u7f51\u7edc\u6296\u52a8\\nstddev_over_time(ping_average_response_ms[5m])\\n```\\n\\n#### \u534f\u8bae\u76d1\u63a7\\n```promql\\n# TCP \u91cd\u4f20\u7387\\nrate(node_netstat_Tcp_RetransSegs[5m])\\n  /\\nrate(node_netstat_Tcp_OutSegs[5m]) * 100\\n\\n# TCP \u8fde\u63a5\u72b6\u6001\u5206\u5e03\\nnode_netstat_Tcp_CurrEstab\\n\\n# UDP \u7f13\u51b2\u533a\u6ea2\u51fa\\nrate(node_netstat_Udp_RcvbufErrors[5m])\\n```\\n\\n### \u81ea\u5b9a\u4e49\u4e1a\u52a1\u76d1\u63a7\\n\\n#### \u4e1a\u52a1\u6307\u6807\u76d1\u63a7\\n```promql\\n# \u8ba2\u5355\u5904\u7406\u901f\u7387\\nrate(business_orders_processed_total[5m])\\n\\n# \u652f\u4ed8\u6210\u529f\u7387\\nsum(rate(payment_transactions_total{status=\\"success\\"}[5m]))\\n  /\\nsum(rate(payment_transactions_total[5m])) * 100\\n\\n# \u7528\u6237\u4f1a\u8bdd\u6570\\nsum(rate(user_sessions_total{status=\\"active\\"}[5m]))\\n\\n# \u4e1a\u52a1\u9519\u8bef\u5206\u5e03\\ntopk(10, sum by (error_type) (rate(business_errors_total[1h])))\\n```\\n\\n#### \u7528\u6237\u4f53\u9a8c\u76d1\u63a7\\n```promql\\n# \u9875\u9762\u52a0\u8f7d\u65f6\u95f4\\nhistogram_quantile(0.95, sum(rate(page_load_time_seconds_bucket[5m])) by (page, le))\\n\\n# JS \u9519\u8bef\u7387\\nsum(rate(frontend_errors_total[5m])) by (error_type)\\n\\n# API \u54cd\u5e94\u65f6\u95f4\\nhistogram_quantile(0.99, sum(rate(api_response_time_seconds_bucket[5m])) by (api, le))\\n```\\n\\n### \u9ad8\u7ea7\u544a\u8b66\u573a\u666f\\n\\n#### \u667a\u80fd\u544a\u8b66\\n```promql\\n# \u52a8\u6001\u9608\u503c\u544a\u8b66\\nabs(\\n  rate(http_requests_total[5m])\\n  - \\n  avg_over_time(rate(http_requests_total[5m])[1d:5m])\\n) > stddev_over_time(rate(http_requests_total[5m])[1d:5m]) * 3\\n\\n# \u5b63\u8282\u6027\u611f\u77e5\u544a\u8b66\\n(\\n  rate(http_requests_total[5m])\\n  / \\n  avg_over_time(rate(http_requests_total[5m] offset 7d)[1h:5m])\\n) > 2\\n```\\n\\n#### \u591a\u7ef4\u5ea6\u544a\u8b66\\n```promql\\n# \u670d\u52a1\u8d28\u91cf\u7efc\u5408\u544a\u8b66\\n(\\n  service:error_rate:5m > 1\\n  and\\n  service:latency:p95_5m > 0.5\\n  and\\n  service:success_rate:5m < 99\\n  and\\n  service:traffic:rate5m > 10\\n)\\n\\n# \u8d44\u6e90\u9971\u548c\u5ea6\u544a\u8b66\\n(\\n  instance:cpu_usage:rate5m > 80\\n  or\\n  instance:memory_usage:ratio > 80\\n  or\\n  instance:disk_usage:ratio > 85\\n)\\n  and\\n  instance:load1 > count(instance:cpu_cores) by (instance)\\n```"},{"id":"/2024/11/17/prometheus-metrics","metadata":{"permalink":"/blog/2024/11/17/prometheus-metrics","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2024-11-17-prometheus-metrics/index.md","source":"@site/blog/2024-11-17-prometheus-metrics/index.md","title":"Prometheus \u6307\u6807\u7c7b\u578b\u8be6\u89e3","description":"\u6df1\u5165\u7406\u89e3 Prometheus \u7684\u56db\u79cd\u6838\u5fc3\u6307\u6807\u7c7b\u578b\u53ca\u5176\u4f7f\u7528\u573a\u666f","date":"2024-11-17T00:00:00.000Z","tags":[{"inline":true,"label":"Prometheus","permalink":"/blog/tags/prometheus"},{"inline":true,"label":"Metrics","permalink":"/blog/tags/metrics"},{"inline":true,"label":"\u76d1\u63a7","permalink":"/blog/tags/\u76d1\u63a7"},{"inline":true,"label":"\u53ef\u89c2\u6d4b\u6027","permalink":"/blog/tags/\u53ef\u89c2\u6d4b\u6027"}],"readingTime":4.185,"hasTruncateMarker":false,"authors":[{"name":"\u68a7\u6850","title":"\u6c38\u8fdc\u5e74\u8f7b\uff0c\u6c38\u8fdc\u70ed\u7231","url":"https://github.com/aide-cloud","page":{"permalink":"/blog/authors/wutong"},"socials":{"github":"https://github.com/aide-cloud"},"imageURL":"https://avatars.githubusercontent.com/u/52439018?v=4","key":"wutong"}],"frontMatter":{"title":"Prometheus \u6307\u6807\u7c7b\u578b\u8be6\u89e3","date":"2024-11-17T00:00:00.000Z","authors":["wutong"],"description":"\u6df1\u5165\u7406\u89e3 Prometheus \u7684\u56db\u79cd\u6838\u5fc3\u6307\u6807\u7c7b\u578b\u53ca\u5176\u4f7f\u7528\u573a\u666f","tags":["Prometheus","Metrics","\u76d1\u63a7","\u53ef\u89c2\u6d4b\u6027"]},"unlisted":false,"prevItem":{"title":"PromQL \u5e38\u7528\u67e5\u8be2\u8bed\u53e5\u793a\u4f8b","permalink":"/blog/2024/11/18/promql-examples"},"nextItem":{"title":"PromQL \u5b9e\u7528\u6307\u5357","permalink":"/blog/2024/11/16/promql"}},"content":"\u5728 Prometheus \u751f\u6001\u7cfb\u7edf\u4e2d\uff0c\u6307\u6807\uff08Metrics\uff09\u662f\u6700\u57fa\u7840\u7684\u6570\u636e\u7c7b\u578b\u3002\u7406\u89e3\u4e0d\u540c\u7c7b\u578b\u7684\u6307\u6807\u53ca\u5176\u9002\u7528\u573a\u666f\uff0c\u5bf9\u4e8e\u6784\u5efa\u6709\u6548\u7684\u76d1\u63a7\u7cfb\u7edf\u81f3\u5173\u91cd\u8981\u3002\u672c\u6587\u5c06\u8be6\u7ec6\u4ecb\u7ecd Prometheus \u7684\u56db\u79cd\u6838\u5fc3\u6307\u6807\u7c7b\u578b\u3002\\n\\n## Counter\uff08\u8ba1\u6570\u5668\uff09\\n\\n### \u5b9a\u4e49\\nCounter \u662f\u4e00\u4e2a\u53ea\u589e\u4e0d\u51cf\u7684\u7d2f\u8ba1\u6307\u6807\u3002\u5b83\u7684\u503c\u53ea\u80fd\u589e\u52a0\u6216\u5728\u91cd\u542f\u65f6\u91cd\u7f6e\u4e3a\u96f6\u3002\\n\\n### \u7279\u70b9\\n- \u5355\u8c03\u9012\u589e\\n- \u53ea\u80fd\u589e\u52a0\u6216\u91cd\u7f6e\u4e3a\u96f6\\n- \u5e38\u7528\u4e8e\u8ba1\u6570\u573a\u666f\\n\\n### \u4f7f\u7528\u573a\u666f\\n```promql\\n# \u5e38\u89c1\u7684 Counter \u6307\u6807\\nhttp_requests_total         # HTTP \u8bf7\u6c42\u603b\u6570\\nnode_network_receive_bytes  # \u7f51\u7edc\u63a5\u6536\u5b57\u8282\u6570\\nerrors_total               # \u9519\u8bef\u603b\u6570\\n```\\n\\n### \u6700\u4f73\u5b9e\u8df5\\n```promql\\n# \u8ba1\u7b97\u901f\u7387\uff08\u6bcf\u79d2\u8bf7\u6c42\u6570\uff09\\nrate(http_requests_total[5m])\\n\\n# \u8ba1\u7b97\u4e00\u6bb5\u65f6\u95f4\u5185\u7684\u589e\u91cf\\nincrease(http_requests_total[1h])\\n```\\n\\n## Gauge\uff08\u4eea\u8868\u76d8\uff09\\n\\n### \u5b9a\u4e49\\nGauge \u662f\u53ef\u4ee5\u4efb\u610f\u4e0a\u4e0b\u6ce2\u52a8\u7684\u6307\u6807\uff0c\u53ef\u589e\u53ef\u51cf\u3002\\n\\n### \u7279\u70b9\\n- \u53ef\u589e\u53ef\u51cf\\n- \u53cd\u6620\u77ac\u65f6\u72b6\u6001\\n- \u9002\u5408\u8bb0\u5f55\u5f53\u524d\u72b6\u6001\\n\\n### \u4f7f\u7528\u573a\u666f\\n```promql\\n# \u5e38\u89c1\u7684 Gauge \u6307\u6807\\nnode_memory_MemAvailable_bytes  # \u53ef\u7528\u5185\u5b58\\nnode_cpu_usage_percent         # CPU \u4f7f\u7528\u7387\\ntemperature_celsius            # \u6e29\u5ea6\\n```\\n\\n### \u6700\u4f73\u5b9e\u8df5\\n```promql\\n# \u76f4\u63a5\u4f7f\u7528\u5f53\u524d\u503c\\nnode_memory_MemAvailable_bytes\\n\\n# \u8ba1\u7b97\u53d8\u5316\u7387\\ndelta(temperature_celsius[1h])\\n```\\n\\n## Histogram\uff08\u76f4\u65b9\u56fe\uff09\\n\\n### \u5b9a\u4e49\\nHistogram \u5bf9\u89c2\u5bdf\u503c\u8fdb\u884c\u91c7\u6837\uff0c\u5e76\u5c06\u5176\u8ba1\u5165\u53ef\u914d\u7f6e\u7684\u6876\uff08bucket\uff09\u4e2d\uff0c\u540c\u65f6\u63d0\u4f9b\u6240\u6709\u89c2\u5bdf\u503c\u7684\u603b\u548c\u3002\\n\\n### \u7279\u70b9\\n- \u5305\u542b\u591a\u4e2a\u6876\u8ba1\u6570\\n- \u81ea\u52a8\u8ba1\u7b97\u603b\u548c\u548c\u6837\u672c\u6570\\n- \u652f\u6301\u5206\u4f4d\u6570\u8ba1\u7b97\\n\\n### \u7ec4\u6210\u90e8\u5206\\n```promql\\n# \u4e00\u4e2a Histogram \u6307\u6807\u4f1a\u81ea\u52a8\u751f\u6210\u4ee5\u4e0b\u6570\u636e\uff1a\\n<basename>_bucket{le=\\"<upper inclusive bound>\\"}  # \u6876\u8ba1\u6570\\n<basename>_sum                                   # \u6240\u6709\u89c2\u5bdf\u503c\u7684\u603b\u548c\\n<basename>_count                                 # \u89c2\u5bdf\u503c\u7684\u603b\u6570\\n```\\n\\n### \u4f7f\u7528\u573a\u666f\\n```promql\\n# HTTP \u8bf7\u6c42\u5ef6\u8fdf\u5206\u5e03\\nhttp_request_duration_seconds_bucket{le=\\"0.1\\"}  # 100ms \u5185\u7684\u8bf7\u6c42\u6570\\nhttp_request_duration_seconds_sum               # \u603b\u5ef6\u8fdf\u65f6\u95f4\\nhttp_request_duration_seconds_count             # \u603b\u8bf7\u6c42\u6570\\n\\n# \u8ba1\u7b97 P90 \u5ef6\u8fdf\\nhistogram_quantile(0.9, \\n  rate(http_request_duration_seconds_bucket[5m])\\n)\\n```\\n\\n## Summary\uff08\u6458\u8981\uff09\\n\\n### \u5b9a\u4e49\\nSummary \u7c7b\u4f3c\u4e8e Histogram\uff0c\u4f46\u5b83\u76f4\u63a5\u5728\u5ba2\u6237\u7aef\u8ba1\u7b97\u5206\u4f4d\u6570\u3002\\n\\n### \u7279\u70b9\\n- \u5ba2\u6237\u7aef\u8ba1\u7b97\u5206\u4f4d\u6570\\n- \u63d0\u4f9b\u603b\u548c\u548c\u8ba1\u6570\\n- \u914d\u7f6e\u56fa\u5b9a\u7684\u5206\u4f4d\u6570\\n\\n### \u7ec4\u6210\u90e8\u5206\\n```promql\\n# \u4e00\u4e2a Summary \u6307\u6807\u4f1a\u81ea\u52a8\u751f\u6210\uff1a\\n<basename>{quantile=\\"<\u03c6>\\"}  # \u03c6-\u5206\u4f4d\u6570\u503c\\n<basename>_sum              # \u6240\u6709\u89c2\u5bdf\u503c\u7684\u603b\u548c\\n<basename>_count            # \u89c2\u5bdf\u503c\u7684\u603b\u6570\\n```\\n\\n### \u4f7f\u7528\u573a\u666f\\n```promql\\n# \u5e94\u7528\u54cd\u5e94\u65f6\u95f4\\nhttp_request_duration_seconds{quantile=\\"0.95\\"}  # P95 \u5ef6\u8fdf\\nhttp_request_duration_seconds_sum               # \u603b\u5ef6\u8fdf\\nhttp_request_duration_seconds_count             # \u603b\u8bf7\u6c42\u6570\\n```\\n\\n## \u6307\u6807\u7c7b\u578b\u9009\u62e9\u5efa\u8bae\\n\\n1. **Counter \u9002\u7528\u4e8e**\uff1a\\n   - \u8bf7\u6c42\u8ba1\u6570\\n   - \u9519\u8bef\u8ba1\u6570\\n   - \u4efb\u52a1\u5b8c\u6210\u6570\\n\\n2. **Gauge \u9002\u7528\u4e8e**\uff1a\\n   - \u5185\u5b58\u4f7f\u7528\u91cf\\n   - \u6e29\u5ea6\\n   - \u5f53\u524d\u5e76\u53d1\u8fde\u63a5\u6570\\n\\n3. **Histogram \u9002\u7528\u4e8e**\uff1a\\n   - \u8bf7\u6c42\u5ef6\u8fdf\\n   - \u54cd\u5e94\u5927\u5c0f\\n   - \u9700\u8981\u8ba1\u7b97\u5206\u4f4d\u6570\u7684\u573a\u666f\\n\\n4. **Summary \u9002\u7528\u4e8e**\uff1a\\n   - \u9700\u8981\u7cbe\u786e\u5206\u4f4d\u6570\u7684\u573a\u666f\\n   - \u5ba2\u6237\u7aef\u8ba1\u7b97\u5206\u4f4d\u6570\u7684\u573a\u666f\\n\\n## \u6700\u4f73\u5b9e\u8df5\\n\\n### 1. \u547d\u540d\u89c4\u8303\\n```promql\\n# \u597d\u7684\u547d\u540d\u793a\u4f8b\\nhttp_requests_total\\nhttp_request_duration_seconds\\nnode_memory_usage_bytes\\n```\\n\\n### 2. \u6807\u7b7e\u4f7f\u7528\\n```promql\\n# \u5408\u7406\u4f7f\u7528\u6807\u7b7e\\nhttp_requests_total{method=\\"GET\\", status=\\"200\\", path=\\"/api/v1/users\\"}\\n```\\n\\n### 3. \u5355\u4f4d\u89c4\u8303\\n- \u4f7f\u7528\u57fa\u672c\u5355\u4f4d\uff08\u79d2\u3001\u5b57\u8282\u7b49\uff09\\n- \u5728\u6307\u6807\u540d\u79f0\u4e2d\u5305\u542b\u5355\u4f4d\u4fe1\u606f\\n\\n## \u603b\u7ed3\\n\\n\u9009\u62e9\u5408\u9002\u7684\u6307\u6807\u7c7b\u578b\u5bf9\u4e8e\u6784\u5efa\u6709\u6548\u7684\u76d1\u63a7\u7cfb\u7edf\u81f3\u5173\u91cd\u8981\uff1a\\n\\n- Counter \u9002\u5408\u7d2f\u8ba1\u578b\u6570\u636e\\n- Gauge \u9002\u5408\u72b6\u6001\u578b\u6570\u636e\\n- Histogram \u9002\u5408\u9700\u8981\u5206\u6790\u5206\u5e03\u7684\u6570\u636e\\n- Summary \u9002\u5408\u9700\u8981\u5ba2\u6237\u7aef\u8ba1\u7b97\u5206\u4f4d\u6570\u7684\u573a\u666f\\n\\n\u7406\u89e3\u8fd9\u4e9b\u6307\u6807\u7c7b\u578b\u7684\u7279\u70b9\u548c\u4f7f\u7528\u573a\u666f\uff0c\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u66f4\u597d\u5730\u8bbe\u8ba1\u76d1\u63a7\u7cfb\u7edf\u3002\\n\\n## \u53c2\u8003\u8d44\u6599\\n\\n- [Prometheus \u6307\u6807\u7c7b\u578b\u6587\u6863](https://prometheus.io/docs/concepts/metric_types/)\\n- [Prometheus \u6700\u4f73\u5b9e\u8df5](https://prometheus.io/docs/practices/naming/)\\n- [Histogram vs Summary](https://prometheus.io/docs/practices/histograms/)"},{"id":"/2024/11/16/promql","metadata":{"permalink":"/blog/2024/11/16/promql","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2024-11-16-promql/index.md","source":"@site/blog/2024-11-16-promql/index.md","title":"PromQL \u5b9e\u7528\u6307\u5357","description":"\u8be6\u7ec6\u4ecb\u7ecd Prometheus \u67e5\u8be2\u8bed\u8a00(PromQL)\u7684\u5e38\u89c1\u7528\u6cd5\u548c\u5b9e\u6218\u6280\u5de7","date":"2024-11-16T00:00:00.000Z","tags":[{"inline":true,"label":"Prometheus","permalink":"/blog/tags/prometheus"},{"inline":true,"label":"PromQL","permalink":"/blog/tags/prom-ql"},{"inline":true,"label":"\u76d1\u63a7","permalink":"/blog/tags/\u76d1\u63a7"},{"inline":true,"label":"\u53ef\u89c2\u6d4b\u6027","permalink":"/blog/tags/\u53ef\u89c2\u6d4b\u6027"}],"readingTime":4.25,"hasTruncateMarker":false,"authors":[{"name":"\u68a7\u6850","title":"\u6c38\u8fdc\u5e74\u8f7b\uff0c\u6c38\u8fdc\u70ed\u7231","url":"https://github.com/aide-cloud","page":{"permalink":"/blog/authors/wutong"},"socials":{"github":"https://github.com/aide-cloud"},"imageURL":"https://avatars.githubusercontent.com/u/52439018?v=4","key":"wutong"}],"frontMatter":{"title":"PromQL \u5b9e\u7528\u6307\u5357","date":"2024-11-16T00:00:00.000Z","authors":["wutong"],"description":"\u8be6\u7ec6\u4ecb\u7ecd Prometheus \u67e5\u8be2\u8bed\u8a00(PromQL)\u7684\u5e38\u89c1\u7528\u6cd5\u548c\u5b9e\u6218\u6280\u5de7","tags":["Prometheus","PromQL","\u76d1\u63a7","\u53ef\u89c2\u6d4b\u6027"]},"unlisted":false,"prevItem":{"title":"Prometheus \u6307\u6807\u7c7b\u578b\u8be6\u89e3","permalink":"/blog/2024/11/17/prometheus-metrics"},"nextItem":{"title":"\u521b\u5efa\u4e00\u4e2a\u62a5\u8b66\u7b56\u7565","permalink":"/blog/new-strategy"}},"content":"\u5728\u4e91\u539f\u751f\u65f6\u4ee3\uff0cPrometheus \u5df2\u7ecf\u6210\u4e3a\u4e86\u76d1\u63a7\u9886\u57df\u7684\u4e8b\u5b9e\u6807\u51c6\u3002\u800c\u638c\u63e1\u5176\u67e5\u8be2\u8bed\u8a00 PromQL \u7684\u4f7f\u7528\uff0c\u5bf9\u4e8e\u65e5\u5e38\u8fd0\u7ef4\u548c\u95ee\u9898\u6392\u67e5\u81f3\u5173\u91cd\u8981\u3002\u672c\u6587\u5c06\u4ecb\u7ecd PromQL \u7684\u5e38\u89c1\u7528\u6cd5\u548c\u5b9e\u6218\u6280\u5de7\u3002\\n\\n## \u57fa\u7840\u67e5\u8be2\u8bed\u6cd5\\n\\n### 1. \u7b80\u5355\u67e5\u8be2\\n\\n\u6700\u57fa\u672c\u7684\u67e5\u8be2\u5c31\u662f\u76f4\u63a5\u4f7f\u7528\u6307\u6807\u540d\u79f0\uff1a\\n\\n```promql\\n# \u67e5\u8be2\u6240\u6709 HTTP \u8bf7\u6c42\u603b\u6570\\nhttp_requests_total\\n\\n# \u5e26\u6807\u7b7e\u7684\u7cbe\u786e\u5339\u914d\u67e5\u8be2\\nhttp_requests_total{status=\\"200\\", method=\\"GET\\"}\\n```\\n\\n### 2. \u6807\u7b7e\u5339\u914d\u64cd\u4f5c\u7b26\\n\\nPromQL \u63d0\u4f9b\u4e86\u56db\u79cd\u6807\u7b7e\u5339\u914d\u64cd\u4f5c\u7b26\uff1a\\n\\n- `=`\uff1a\u5b8c\u5168\u76f8\u7b49\\n- `!=`\uff1a\u4e0d\u7b49\u4e8e\\n- `=~`\uff1a\u6b63\u5219\u5339\u914d\\n- `!~`\uff1a\u6b63\u5219\u4e0d\u5339\u914d\\n\\n\u793a\u4f8b\uff1a\\n\\n```promql\\n# \u5339\u914d\u6240\u6709 2xx \u72b6\u6001\u7801\u7684\u8bf7\u6c42\\nhttp_requests_total{status=~\\"2..\\"}\\n\\n# \u5339\u914d\u9664\u4e86 POST \u4ee5\u5916\u7684\u6240\u6709\u8bf7\u6c42\u65b9\u6cd5\\nhttp_requests_total{method!=\\"POST\\"}\\n```\\n\\n### 3. \u65f6\u95f4\u8303\u56f4\u67e5\u8be2\\n\\n\u5728 Prometheus \u4e2d\uff0c\u6211\u4eec\u7ecf\u5e38\u9700\u8981\u67e5\u8be2\u4e00\u6bb5\u65f6\u95f4\u5185\u7684\u6570\u636e\uff1a\\n\\n```promql\\n# \u67e5\u8be2\u6700\u8fd1 5 \u5206\u949f\u7684\u6570\u636e\\nhttp_requests_total{status=\\"200\\"}[5m]\\n\\n# \u67e5\u8be2 1 \u5c0f\u65f6\u524d\u7684 5 \u5206\u949f\u6570\u636e\\nhttp_requests_total{status=\\"200\\"}[5m] offset 1h\\n```\\n\\n## \u5e38\u7528\u51fd\u6570\u548c\u8fd0\u7b97\u7b26\\n\\n### 1. rate() \u548c irate()\\n\\n\u8fd9\u4e24\u4e2a\u51fd\u6570\u7528\u4e8e\u8ba1\u7b97\u8ba1\u6570\u5668\uff08counter\uff09\u7c7b\u578b\u6307\u6807\u7684\u53d8\u5316\u7387\uff1a\\n\\n```promql\\n# \u8ba1\u7b97\u8bf7\u6c42\u901f\u7387\uff08\u6bcf\u79d2\uff09\\nrate(http_requests_total[5m])\\n\\n# \u8ba1\u7b97\u77ac\u65f6\u901f\u7387\\nirate(http_requests_total[5m])\\n```\\n\\n### 2. \u805a\u5408\u8fd0\u7b97\u7b26\\n\\n```promql\\n# \u8ba1\u7b97\u6240\u6709\u5b9e\u4f8b\u7684\u8bf7\u6c42\u603b\u548c\\nsum(http_requests_total)\\n\\n# \u6309\u7167\u5e94\u7528\u540d\u79f0\u5206\u7ec4\u8ba1\u7b97\u5e73\u5747\u503c\\navg by(app) (http_requests_total)\\n\\n# \u67e5\u627e\u6700\u5927\u503c\u524d 3 \u540d\\ntopk(3, http_requests_total)\\n```\\n\\n## \u5b9e\u7528\u76d1\u63a7\u573a\u666f\\n\\n### 1. \u670d\u52a1\u53ef\u7528\u6027\u76d1\u63a7\\n\\n```promql\\n# \u670d\u52a1\u53ef\u7528\u6027\u767e\u5206\u6bd4\\n(1 - (\\n  sum(increase(http_requests_total{status=~\\"5..\\"}[5m])) /\\n  sum(increase(http_requests_total[5m]))\\n)) * 100\\n\\n# \u670d\u52a1\u54cd\u5e94\u65f6\u95f4 P99\\nhistogram_quantile(0.99, \\n  sum(rate(http_request_duration_seconds_bucket[5m])) by (le)\\n)\\n```\\n\\n### 2. \u8d44\u6e90\u4f7f\u7528\u76d1\u63a7\\n\\n```promql\\n# CPU \u4f7f\u7528\u7387\\n100 - (\\n  avg by(instance) (\\n    rate(node_cpu_seconds_total{mode=\\"idle\\"}[5m])\\n  ) * 100\\n)\\n\\n# \u5185\u5b58\u4f7f\u7528\u7387\\n(\\n  node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes\\n) / node_memory_MemTotal_bytes * 100\\n\\n# \u78c1\u76d8\u4f7f\u7528\u7387\\n(\\n  node_filesystem_size_bytes - node_filesystem_free_bytes\\n) / node_filesystem_size_bytes * 100\\n```\\n\\n### 3. \u5bb9\u5668\u76d1\u63a7\\n\\n```promql\\n# \u5bb9\u5668 CPU \u4f7f\u7528\u7387\\nsum(\\n  rate(container_cpu_usage_seconds_total{container!=\\"\\"}[5m])\\n) by (container) * 100\\n\\n# \u5bb9\u5668\u5185\u5b58\u4f7f\u7528\u91cf\uff08GB\uff09\\nsum(\\n  container_memory_usage_bytes{container!=\\"\\"}\\n) by (container) / 1024^3\\n```\\n\\n## \u6027\u80fd\u4f18\u5316\u6280\u5de7\\n\\n1. **\u67e5\u8be2\u4f18\u5316**\\n   - \u4f7f\u7528\u7cbe\u786e\u7684\u6807\u7b7e\u5339\u914d\u800c\u4e0d\u662f\u6b63\u5219\u8868\u8fbe\u5f0f\\n   - \u907f\u514d\u4f7f\u7528\u8fc7\u957f\u7684\u65f6\u95f4\u8303\u56f4\\n   - \u5408\u7406\u4f7f\u7528\u805a\u5408\u64cd\u4f5c\\n\\n2. **\u6570\u636e\u91c7\u96c6\u4f18\u5316**\\n   ```promql\\n   # \u4f7f\u7528\u8bb0\u5f55\u89c4\u5219\u9884\u8ba1\u7b97\u5e38\u7528\u67e5\u8be2\\n   record: job:http_requests:rate5m\\n   expr: rate(http_requests_total[5m])\\n   ```\\n\\n## \u5e38\u89c1\u95ee\u9898\u6392\u67e5\\n\\n### 1. \u6570\u636e\u7f3a\u5931\u68c0\u67e5\\n\\n```promql\\n# \u68c0\u67e5\u65f6\u95f4\u5e8f\u5217\u662f\u5426\u5b58\u5728\\nabsent(up{job=\\"my-service\\"})\\n\\n# \u68c0\u67e5\u91c7\u96c6\u76ee\u6807\u72b6\u6001\\nup{job=\\"my-service\\"} == 0\\n```\\n\\n### 2. \u6570\u636e\u5f02\u5e38\u5206\u6790\\n\\n```promql\\n# \u68c0\u67e5\u901f\u7387\u5f02\u5e38\\nrate(http_requests_total[5m]) > 100\\n\\n# \u68c0\u67e5\u5ef6\u8fdf\u5f02\u5e38\\nhistogram_quantile(0.95, http_request_duration_seconds_bucket) > 1\\n```\\n\\n## \u6700\u4f73\u5b9e\u8df5\\n\\n1. **\u547d\u540d\u89c4\u8303**\\n   - \u4f7f\u7528\u6709\u610f\u4e49\u7684\u6307\u6807\u540d\u79f0\\n   - \u4fdd\u6301\u6807\u7b7e\u547d\u540d\u7684\u4e00\u81f4\u6027\\n   - \u907f\u514d\u8fc7\u591a\u7684\u6807\u7b7e\u7ef4\u5ea6\\n\\n2. **\u67e5\u8be2\u8bbe\u8ba1**\\n   - \u4f18\u5148\u4f7f\u7528 `rate()` \u800c\u4e0d\u662f `irate()`\\n   - \u5408\u7406\u4f7f\u7528\u8bb0\u5f55\u89c4\u5219\\n   - \u907f\u514d\u590d\u6742\u7684\u5d4c\u5957\u67e5\u8be2\\n\\n3. **\u544a\u8b66\u8bbe\u8ba1**\\n   - \u8bbe\u7f6e\u5408\u7406\u7684\u544a\u8b66\u9608\u503c\\n   - \u4f7f\u7528\u544a\u8b66\u805a\u5408\u51cf\u5c11\u566a\u97f3\\n   - \u63d0\u4f9b\u6e05\u6670\u7684\u544a\u8b66\u63cf\u8ff0\\n\\n## \u603b\u7ed3\\n\\nPromQL \u662f\u4e00\u4e2a\u5f3a\u5927\u7684\u67e5\u8be2\u8bed\u8a00\uff0c\u638c\u63e1\u5b83\u9700\u8981\uff1a\\n\\n- \u6df1\u5165\u7406\u89e3\u57fa\u672c\u6982\u5ff5\\n- \u719f\u7ec3\u8fd0\u7528\u5e38\u7528\u51fd\u6570\\n- \u6ce8\u610f\u67e5\u8be2\u6027\u80fd\u4f18\u5316\\n- \u9075\u5faa\u6700\u4f73\u5b9e\u8df5\\n\\n\u901a\u8fc7\u672c\u6587\u7684\u4ecb\u7ecd\u548c\u793a\u4f8b\uff0c\u5e0c\u671b\u80fd\u5e2e\u52a9\u4f60\u66f4\u597d\u5730\u4f7f\u7528 PromQL \u8fdb\u884c\u7cfb\u7edf\u76d1\u63a7\u548c\u95ee\u9898\u8bca\u65ad\u3002\\n\\n## \u53c2\u8003\u8d44\u6599\\n\\n- [Prometheus \u5b98\u65b9\u6587\u6863](https://prometheus.io/docs/prometheus/latest/querying/basics/)\\n- [PromQL \u6700\u4f73\u5b9e\u8df5](https://prometheus.io/docs/practices/rules/)\\n- [Prometheus \u67e5\u8be2\u4f18\u5316](https://prometheus.io/docs/practices/instrumentation/)\\n```"},{"id":"new-strategy","metadata":{"permalink":"/blog/new-strategy","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2024-11-15-new-strategy/index.md","source":"@site/blog/2024-11-15-new-strategy/index.md","title":"\u521b\u5efa\u4e00\u4e2a\u62a5\u8b66\u7b56\u7565","description":"\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u4e86\u89e3\u7b56\u7565\u7684\u57fa\u672c\u6982\u5ff5\u3002","date":"2024-11-15T00:00:00.000Z","tags":[{"inline":true,"label":"Moon","permalink":"/blog/tags/moon"},{"inline":true,"label":"Metric","permalink":"/blog/tags/metric"},{"inline":true,"label":"Prometheus","permalink":"/blog/tags/prometheus"},{"inline":true,"label":"VictoriaMetrics","permalink":"/blog/tags/victoria-metrics"}],"readingTime":2.685,"hasTruncateMarker":false,"authors":[{"name":"\u68a7\u6850","title":"\u6c38\u8fdc\u5e74\u8f7b\uff0c\u6c38\u8fdc\u70ed\u7231","url":"https://github.com/aide-cloud","page":{"permalink":"/blog/authors/wutong"},"socials":{"github":"https://github.com/aide-cloud"},"imageURL":"https://avatars.githubusercontent.com/u/52439018?v=4","key":"wutong"}],"frontMatter":{"slug":"new-strategy","title":"\u521b\u5efa\u4e00\u4e2a\u62a5\u8b66\u7b56\u7565","authors":["wutong"],"tags":["Moon","Metric","Prometheus","VictoriaMetrics"]},"unlisted":false,"prevItem":{"title":"PromQL \u5b9e\u7528\u6307\u5357","permalink":"/blog/2024/11/16/promql"},"nextItem":{"title":"Hello Moon","permalink":"/blog/hello"}},"content":"\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u4e86\u89e3\u7b56\u7565\u7684\u57fa\u672c\u6982\u5ff5\u3002\\n\\n## \u4ec0\u4e48\u662f\u7b56\u7565\uff1f\\n\\n\u7b56\u7565\u662f\u4e00\u7ec4\u89c4\u5219\u7684\u96c6\u5408\uff0c\u7528\u4e8e\u53bb\u68c0\u6d4b\u548c\u62a5\u8b66\u7cfb\u7edf\u4e2d\u7684\u6307\u6807\u3002\\n\\n## \u9700\u8981\u54ea\u4e9b\u4e1c\u897f\uff1f\\n\\n1. \u4ec0\u4e48\u573a\u666f\u7684\u544a\u8b66\u7b56\u7565\uff1f\\n2. \u544a\u8b66\u7ed9\u8c01\uff1f\\n3. \u600e\u4e48\u5c55\u793a\uff1f\\n\\n\u9488\u5bf9\u4e0a\u8ff0\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u8ba1\u4ee5\u4e0b\u7b56\u7565\uff1a\\n\\n1. \u7cfb\u7edf CPU \u4f7f\u7528\u7387\u8fc7\u9ad8\uff1a\u5f53\u7cfb\u7edf CPU \u4f7f\u7528\u7387\u8d85\u8fc7 80% \u65f6\uff0c\u53d1\u9001\u90ae\u4ef6\u7ed9\u7ba1\u7406\u5458\u3002\\n\\n## \u521b\u5efaHook\\n\\n> Hook \u662f Moon \u7528\u6765\u4e0e\u5916\u90e8\u7cfb\u7edf\u96c6\u6210\u7684\u4e00\u79cd\u65b9\u5f0f\u3002Moon \u652f\u6301\u591a\u79cd\u7c7b\u578b\u7684 Hook\uff0c\u5305\u62ec\u90ae\u4ef6\u3001\u77ed\u4fe1\u3001\u7535\u8bdd\u3001\u4f01\u4e1a\u5fae\u4fe1\u3001\u98de\u4e66\u7b49\u3002\\n\\n![Hook](./img/hook-add.png)\\n\\n## \u521b\u5efa\u544a\u8b66\u901a\u77e5\u7ec4\\n\\n> \u544a\u8b66\u7ec4\u662f\u7528\u4e8e\u7ba1\u7406\u901a\u77e5\u6e20\u9053\u7684\u96c6\u5408\u3002\u91cc\u9762\u5305\u542b\u4eba\u5458\uff08\u90ae\u4ef6\u3001\u77ed\u4fe1\u3001\u7535\u8bdd\uff09\uff0c Hook(Webhook\u3001 DingTalk\u3001\u4f01\u4e1a\u5fae\u4fe1\u3001\u98de\u4e66\u7b49)\\n\\n* \u767b\u5f55\u5230 Moon \u63a7\u5236\u53f0\uff0c\u70b9\u51fb\u5de6\u4fa7\u5bfc\u822a\u680f\u7684\u201c\u544a\u8b66\u901a\u77e5->\u544a\u8b66\u7ec4\u201d\uff0c\u70b9\u51fb\u201c\u6dfb\u52a0\u201d\u6309\u94ae\u3002\\n\\n![\u544a\u8b66\u901a\u77e5\u7ec4](./img/notify-group.png)\\n\\n## \u521b\u5efa\u6570\u636e\u6e90\\n\\n* \u767b\u5f55\u5230 Moon \u63a7\u5236\u53f0\uff0c\u70b9\u51fb\u5de6\u4fa7\u5bfc\u822a\u680f\u7684\u201c\u6570\u636e\u6e90->Metric\u201d\uff0c\u70b9\u51fb\u201c\u65b0\u5efa\u6570\u636e\u6e90\u201d\u6309\u94ae\u3002\\n\\n![Metric\u6570\u636e\u6e90](./img/datasource.png)\\n\\n![CPU \u4f7f\u7528\u7387\u67e5\u8be2](./img/datasource-query-cpu-use-80.png)\\n\\n## \u521b\u5efa\u7b56\u7565\u7ec4\\n\\n> \u7b56\u7565\u7ec4\u662f\u7b56\u7565\u7684\u96c6\u5408\uff0c\u53ef\u4ee5\u5b9a\u4e49\u591a\u4e2a\u7b56\u7565\uff0c\u6bcf\u4e2a\u7b56\u7565\u53ef\u4ee5\u5173\u8054\u591a\u4e2a\u6570\u636e\u6e90\u3002\\n\\n* \u767b\u5f55\u5230 Moon \u63a7\u5236\u53f0\uff0c\u70b9\u51fb\u5de6\u4fa7\u5bfc\u822a\u680f\u7684\u201c\u7b56\u7565\u7ba1\u7406->\u7b56\u7565\u7ec4\u201d\uff0c\u70b9\u51fb\u201c\u6dfb\u52a0\u201d\u6309\u94ae\u3002\\n\\n![\u7b56\u7565\u7ec4](./img/strategy-group-add.png)\\n\\n## \u521b\u5efa\u7b56\u7565\\n\\n> \u7b56\u7565\u662f\u4e00\u7ec4\u89c4\u5219\u7684\u96c6\u5408\uff0c\u7528\u4e8e\u53bb\u68c0\u6d4b\u548c\u62a5\u8b66\u7cfb\u7edf\u4e2d\u7684\u6307\u6807\u3002\\n\\n* \u767b\u5f55\u5230 Moon \u63a7\u5236\u53f0\uff0c\u70b9\u51fb\u5de6\u4fa7\u5bfc\u822a\u680f\u7684\u201c\u7b56\u7565\u7ba1\u7406->\u7b56\u7565\u5217\u8868\u201d\uff0c\u70b9\u51fb\u201c\u6dfb\u52a0\u201d\u6309\u94ae\u3002\\n\\n![\u7b56\u7565\u6dfb\u52a0](./img/strategy-add-1.png)\\n\\n![\u7b56\u7565\u6dfb\u52a0](./img/strategy-add-2.png)\\n\\n![\u7b56\u7565\u6dfb\u52a0](./img/strategy-add-3.png)\\n\\n![\u7b56\u7565\u8be6\u60c5](./img/strategy-detail.png)\\n\\n## \u67e5\u770b\u544a\u8b66\\n\\n![\u544a\u8b66\u5217\u8868](./img/realtime-alarm.png)\\n\\n![\u544a\u8b66\u8be6\u60c5](./img/realtime-detail.png)\\n\\n![feishu\u901a\u77e5](./img/feishu-notify.png)\\n\\n![email\u901a\u77e5](./img/email-notify.png)\\n\\n## \u544a\u8b66\u6062\u590d\\n\\n> \u8fd9\u91cc\u662f\u4fee\u6539\u7b56\u7565\u7684\u9608\u503c\u4e3a100%\uff0c\u544a\u8b66\u6062\u590d\u3002\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5173\u95ed\u7b56\u7565\u6765\u4ea7\u751f\u544a\u8b66\u6062\u590d\u4e8b\u4ef6\\n\\n![\u544a\u8b66\u6062\u590d](./img/alert-recover.png)\\n\\n![\u544a\u8b66\u6062\u590dfeishu](./img/alert-recover-feishu.png)\\n\\n## \u67e5\u770b\u544a\u8b66\u5386\u53f2\\n\\n![\u544a\u8b66\u5386\u53f2](./img/alarm-history.png)"},{"id":"hello","metadata":{"permalink":"/blog/hello","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2024-11-14-hello/index.md","source":"@site/blog/2024-11-14-hello/index.md","title":"Hello Moon","description":"\u767b\u9646\u9875","date":"2024-11-14T00:00:00.000Z","tags":[{"inline":true,"label":"Moon","permalink":"/blog/tags/moon"},{"inline":true,"label":"Metric","permalink":"/blog/tags/metric"},{"inline":true,"label":"Prometheus","permalink":"/blog/tags/prometheus"},{"inline":true,"label":"VictoriaMetrics","permalink":"/blog/tags/victoria-metrics"}],"readingTime":0.585,"hasTruncateMarker":false,"authors":[{"name":"\u68a7\u6850","title":"\u6c38\u8fdc\u5e74\u8f7b\uff0c\u6c38\u8fdc\u70ed\u7231","url":"https://github.com/aide-cloud","page":{"permalink":"/blog/authors/wutong"},"socials":{"github":"https://github.com/aide-cloud"},"imageURL":"https://avatars.githubusercontent.com/u/52439018?v=4","key":"wutong"}],"frontMatter":{"slug":"hello","title":"Hello Moon","authors":["wutong"],"tags":["Moon","Metric","Prometheus","VictoriaMetrics"]},"unlisted":false,"prevItem":{"title":"\u521b\u5efa\u4e00\u4e2a\u62a5\u8b66\u7b56\u7565","permalink":"/blog/new-strategy"}},"content":"## \u767b\u9646\u9875\\n\\n![\u767b\u9646\u9875](./img/login.png)\\n\\n## \u5b9e\u65f6\u544a\u8b66\\n\\n![\u5b9e\u65f6\u544a\u8b66](./img/real-time.png)\\n\\n## \u6570\u636e\u6e90\\n\\n### \u6570\u636e\u6e90\u5217\u8868\\n\\n![\u6570\u636e\u6e90](./img/datasource.png)\\n\\n### \u5143\u6570\u636e\\n\\n![\u5143\u6570\u636e](./img/metadata.png)\\n\\n### \u67e5\u8be2\u5668\\n\\n![\u67e5\u8be2\u7f16\u8f91\u5668](./img/query-edit.png)\\n\\n## \u7b56\u7565\u7ba1\u7406\\n\\n### \u7b56\u7565\u5217\u8868\\n\\n![\u7b56\u7565\u7ba1\u7406](./img/strategy.png)\\n\\n### \u7b56\u7565\u7f16\u8f91\u5668\\n\\n![\u7b56\u7565\u7f16\u8f91\u5668](./img/strategy-edit-1.png)\\n\\n![\u7b56\u7565\u7f16\u8f91\u5668](./img/strategy-edit-2.png)\\n\\n### \u7b56\u7565\u8be6\u60c5\\n\\n![\u7b56\u7565\u8be6\u60c5](./img/strategy-detail.png)\\n\\n## \u544a\u8b66\u7ec4\\n\\n### \u544a\u8b66\u7ec4\u5217\u8868\\n\\n![\u544a\u8b66\u7ec4](./img/alert-group.png)\\n\\n### \u544a\u8b66Hook\u5bf9\u8c61\\n\\n![\u544a\u8b66Hook\u5bf9\u8c61](./img/alert-hook.png)"}]}}')}}]);